@using CriticalPath.Web.Models
@using CriticalPath.Data
@using CP.i8n
@model Country
@{
    ViewBag.Title = EntityStrings.CreateCountry;
}
<h2 class="col-lg-offset-2 col-md-offset-3 col-sm-offset-3">@ViewBag.Title</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        
        <div class="form-group">
            @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.CountryName, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.CountryName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TwoLetterIsoCode, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.TwoLetterIsoCode, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.TwoLetterIsoCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ThreeLetterIsoCode, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.ThreeLetterIsoCode, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.ThreeLetterIsoCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NumericIsoCode, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.EditorFor(m => m.NumericIsoCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.NumericIsoCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.EditorFor(m => m.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.DisplayOrder, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsPublished, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.EditorFor(m => m.IsPublished, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.IsPublished, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.Partial("_SaveButtonsPartial")
    </div>
}
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
