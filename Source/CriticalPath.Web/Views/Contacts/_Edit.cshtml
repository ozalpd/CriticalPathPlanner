@using CriticalPath.Web.Models
@using CriticalPath.Data
@using CP.i8n
@model Contact
@{
    bool modal = ViewBag.Modal ?? false;
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "dataInputForm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(m => m.CompanyId)
        <div class="form-group">
            @Html.LabelFor(model => model.EmailWork, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.EmailWork, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.EmailWork, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EmailHome, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.EmailHome, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.EmailHome, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PhoneMobile, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.PhoneMobile, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.PhoneMobile, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PhoneWork1, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.PhoneWork1, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.PhoneWork1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PhoneWork2, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.PhoneWork2, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.PhoneWork2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.Notes, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Discontinued, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.EditorFor(m => m.Discontinued, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(m => m.Discontinued, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DiscontinueNotes, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.DiscontinueNotes, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.DiscontinueNotes, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (modal)
        {
            <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        }
        else
        {
            @Html.Partial("_SaveButtonsPartial")
        }
    </div>
}
