@using CriticalPath.Data.Resources
@using CriticalPath.Data
@model IHasProduct
@{
    Layout = null;
}

<div class="form-group">
    @Html.Label(EntityStrings.ProductCategory, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
    <div class="col-lg-2 col-md-3 col-sm-3">
        @Html.DropDownList("ParentCategoryId", null, ActionStrings.SelectPlease, htmlAttributes: new { @class = "form-control" })
    </div>
    <div class="col-lg-3 col-md-3 col-sm-4">
        @Html.DropDownList("CategoryId", null, ActionStrings.SelectPlease, htmlAttributes: new { @class = "form-control" })
    </div>
</div>
<div class="form-group">
    @Html.Label(EntityStrings.Product, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
    <div class="col-lg-5 col-md-6 col-sm-7">
        @Html.DropDownList("ProductId", null, ActionStrings.SelectPlease, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ProductId, "", new { @class = "text-danger" })
    </div>
</div>
<script type="text/javascript">
    function resetSelect(targetSelect) {
        targetSelect.empty();
        targetSelect.append($('<option/>', {
            value: '',
            text: '@Html.Raw(ActionStrings.SelectPlease)'
        }));
    }
    $('#ParentCategoryId').change(function () {
        var selectedId = $(this).val();
        if (selectedId != null && selectedId != '') {
            $.getJSON('/ProductCategories/SubCategories', { parentCategoryId: selectedId }, function (subCategories) {
                var targetSelect = $('#CategoryId');
                resetSelect(targetSelect);
                resetSelect(productSelect);
                $.each(subCategories, function (index, subCategory) {
                    targetSelect.append($('<option/>', {
                        value: subCategory.Id,
                        text: subCategory.Title
                    }));
                });
            });
        }
    });
    $('#CategoryId').change(function () {
        var selectedId = $(this).val();
        if (selectedId != null && selectedId != '') {
            $.getJSON('/Products/Products', { categoryId: selectedId }, function (products) {
                resetSelect(productSelect);
                productList = products;
                $.each(products, function (index, product) {
                    productSelect.append($('<option/>', {
                        value: product.Id,
                        text: product.Title
                    }));
                });
            });
        }
    });
</script>