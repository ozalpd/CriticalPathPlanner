@using CriticalPath.Web.Models
@using CriticalPath.Data
@using CP.i8n
@model Licensor
@{
    ViewBag.Title = EntityStrings.EditLicensor;
}
<h2 class="col-lg-offset-2 col-md-offset-3 col-sm-offset-3">@ViewBag.Title</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        
        <div class="form-group">
            @Html.LabelFor(model => model.LicensorCode, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.LicensorCode, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.LicensorCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Phone1, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.Phone1, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.Phone1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Phone2, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.Phone2, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.Phone2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Phone3, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.Phone3, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.Phone3, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.Address1, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.Address1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.Address2, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.Address2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.DropDownListFor(m => m.CountryId, null, ActionStrings.SelectPlease, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.City, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.State, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-7 col-md-8 col-sm-9">
                @Html.TextAreaFor(m => m.Notes, 4, 1, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.Partial("_SaveButtonsPartial")
    </div>
}
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
