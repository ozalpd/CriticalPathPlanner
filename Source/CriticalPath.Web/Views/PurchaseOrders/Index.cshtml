@using CriticalPath.Web.Models
@using CriticalPath.Data
@using CP.i8n
@model IEnumerable<PurchaseOrder>
@{
    ViewBag.Title = @EntityStrings.PurchaseOrders;

    //Authorization Flags
    bool canUserEdit = ViewBag.canUserEdit;
    bool canUserCreate = ViewBag.canUserCreate;
    bool canUserDelete = ViewBag.canUserDelete;
    bool canSeeRestricted = ViewBag.canSeeRestricted && !ViewBag.HideRestricted;
    bool canUserApprove = ViewBag.canUserApprove;
    bool canUserCancelPO = ViewBag.canUserCancelPO;

    //Records & Pager
    int page = ViewBag.page;
    int totalCount = ViewBag.totalCount;
    int pageSize = ViewBag.pageSize;
    int pageCount = ViewBag.pageCount;
    int grandTotal = 0;

    int[] sizeArray = ViewBag.SizeArray;

    string filterPanelClass = ViewBag.FilterPanelExpanded ? "accordion-body collapse in" : "accordion-body collapse";
    string filterButtonClass = ViewBag.FilterPanelExpanded ? "glyphicon glyphicon-minus" : "glyphicon glyphicon-plus";
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "searchForm" }))
{
    @Html.Hidden("page", page)
    @*@Html.Hidden("pageSize", pageSize)*@
    <div class="well hidden-print">
        <div class="accordion">
            <div id="filterAccordion" class="accordion-group row">
                <div class="accordion-heading">
                    <div class="col-md-4">
                        <h4>@EntityStrings.PurchaseOrders</h4>
                    </div>
                    <div class="col-sm-3 col-md-2">
                        <div class="checkbox ml20 mt0">
                            @Html.CheckBox("IsApproved")
                            @EntityStrings.IsApproved
                        </div>
                        <div class="checkbox ml20">
                            @Html.CheckBox("Cancelled")
                            @EntityStrings.Cancelled
                        </div>
                    </div>
                    <div class="col-sm-8 col-sm-offset-1 col-md-6 col-md-offset-0">
                        <div class="input-group">
                            @Html.TextBox("SearchString", null, new { @class = "form-control", placeholder = MessageStrings.EnterKeywordHere })
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-default" onclick="getPagedData(1)">
                                    <span class="glyphicon glyphicon-search"></span>
                                </button>
                            </span>
                            <span class="input-group-btn">
                                <a class="accordion-toggle btn btn-success" data-toggle="collapse"
                                   data-parent="filterAccordion" href="#filterPanel" onclick='toogleAccordionSign()'>
                                    <span id="filterPanelSign" class="@filterButtonClass"></span>
                                </a>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div id="filterPanel" class="@filterPanelClass">
                <div class="accordion-inner">
                    <!-- Accordion inner-->
                    <div class="form-horizontal">
                        <div class="row mb5">
                            <div class="col-sm-4">

                            </div>
                            <div class="col-sm-3">
                                <div class="checkbox ml20">
                                    @Html.CheckBox("HideRestricted")
                                    Hide Restricted Columns
                                </div>
                            </div>
                            <label class="col-sm-3 control-label">
                                Display Records
                            </label>
                            <div class="col-sm-2">
                                <select id="PageSize" name="PageSize" class="form-control">
                                    @for (int i = 0; i < sizeArray.Length; i++)
                                    {
                                        if (sizeArray[i] == pageSize)
                                        {
                                            <option selected="selected" value="@sizeArray[i]">@sizeArray[i]</option>
                                        }
                                        else
                                        {
                                            <option value="@sizeArray[i]">@sizeArray[i]</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row mb5">
                            <div class="col-sm-4">
                                @Html.DropDownList("CustomerId", null, CommonStrings.AllCustomers, htmlAttributes: new { @class = "form-control" })
                            </div>
                            <div class="col-sm-4">
                                @Html.DropDownList("CustomerDepartmentId", null, CommonStrings.AllDepartments, htmlAttributes: new { @class = "form-control" })
                            </div>
                            <div class="col-sm-4">
                                @Html.DropDownList("SupplierId", null, CommonStrings.AllSuppliers, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="row mb5">
                            <div class="col-sm-4">
                            </div>
                            <div class="col-sm-4">
                                @Html.DropDownList("MerchandiserId", null, CommonStrings.AllMerchandisers, htmlAttributes: new { @class = "form-control" })
                            </div>
                            <div class="col-sm-4">
                                @Html.DropDownList("DesignerId", null, CommonStrings.AllDesigners, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <!--// Accordion inner-->
                </div>
            </div>
        </div>
    </div>
}
@if (totalCount > 0)
{
    <table class="table table-hover table-striped">
        <tr>
            <th class="hidden-print" width="20px">@ActionStrings.Action</th>
            <th title="Order Date / Cancel Status / Approve Status">
                @Html.DisplayNameFor(model => model.OrderDate)<br />
                Cancel/Appr.
            </th>
            @if (canSeeRestricted)
            {
                <th>@Html.DisplayNameFor(model => model.DueDate)</th>
            }
            <th>@Html.DisplayNameFor(model => model.Product)</th>
            <th>
                @Html.DisplayNameFor(model => model.PoNr)<br />
                @Html.DisplayNameFor(model => model.RefCode)
            </th>
            <th>@Html.DisplayNameFor(model => model.Designer)</th>
            <th>@EntityStrings.Merchandiser</th>
            <th>@Html.DisplayNameFor(model => model.Supplier)</th>
            <th>
                @Html.DisplayNameFor(model => model.Customer)<br />
                @Html.DisplayNameFor(model => model.CustomerDepartment)
            </th>
            <th>@Html.DisplayNameFor(model => model.Licensor)</th>
            <th>@Html.DisplayNameFor(model => model.Quantity)</th>
            @if (canSeeRestricted)
            {
                <th>@Html.DisplayNameFor(model => model.DiscountRate)</th>
                <th>@Html.DisplayNameFor(model => model.UnitPrice)</th>
            }
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td class="hidden-print">
                    <div class="btn-group">
                        <button type="button" title="@ActionStrings.Action" class="btn btn-xs btn-default dropdown-toggle" data-toggle="dropdown">
                            <span class="glyphicon glyphicon-tasks"></span> <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" role="menu">
                            <li>@Html.ActionLink(ActionStrings.Details, "Details", new { id = item.Id })</li>
                            @if (canUserEdit)
                            {
                                <li>@Html.ActionLink(ActionStrings.Edit, "Edit", new { id = item.Id })</li>
                            }
                            @if (!item.IsApproved && canUserDelete)
                            {
                                <li>
                                    <a href="#deleteConfirm" data-toggle="modal" onclick="setDelete('<b>@EntityStrings.PoNr @item.PoNr, @EntityStrings.Product @item.Product.ProductCode</b>', @item.Id);">
                                        @ActionStrings.Delete
                                    </a>
                                </li>
                            }
                            @if (!item.IsApproved && canUserEdit)
                            {
                                <li class="divider"></li>
                                <li>@Html.ActionLink(EntityStrings.EditProduct, "Edit", "Products", new { id = item.ProductId }, null)</li>
                            }
                            @if (canUserCreate)
                            {
                                <li class="divider"></li>
                                <li>@Html.ActionLink(ActionStrings.Repeat, "Repeat", new { id = item.Id })</li>
                            }
                            @if ((!item.Cancelled && canUserCancelPO) || (!item.IsApproved && canUserApprove))
                            {
                                <li class="divider"></li>
                            }
                            @if (!item.Cancelled && !item.IsApproved && canUserApprove)
                            {
                                <li>@Html.ActionLink(ActionStrings.Approve, "Approve", new { id = item.Id })</li>
                            }
                            @if (!item.Cancelled && canUserCancelPO)
                            {
                                <li>@Html.ActionLink(ActionStrings.CancelPO, "CancelPO", new { id = item.Id })</li>
                            }
                            @if (item.Processes.Count == 0)
                            {
                                <li>@Html.ActionLink(EntityStrings.CreateProcess, "Create", "Processes", new { purchaseOrderId = item.Id }, null)</li>
                            }
                        </ul>
                    </div>
                </td>
                <td align="right">
                    @Html.DisplayFor(modelItem => item.OrderDate)
                    @if (item.Cancelled)
                    {
                        <div title="@EntityStrings.Cancelled">
                            @Html.DisplayFor(modelItem => item.Cancelled)
                            <span class="checkboxText">@Html.DisplayFor(i => item.CancelDate)</span>
                        </div>
                    }
                    @if (item.IsApproved)
                    {
                        <div title="@EntityStrings.IsApproved">
                            @Html.DisplayFor(modelItem => item.IsApproved)
                            <span class="checkboxText">@Html.DisplayFor(i => item.ApproveDate)</span>
                        </div>
                    }
                </td>
                @if (canSeeRestricted)
                {
                    <td align="right">@Html.DisplayFor(modelItem => item.DueDate)</td>
                }
                <td>
                    @if (!string.IsNullOrEmpty(item.Product?.ImageUrl))
                    {
                        <label class="btn pt0 pb0 pl0 pr0" style="max-height:53px;overflow:hidden;"
                               onclick="showImage('@Html.Encode(item.Product.ProductCode)', '@AppSettings.Urls.ProductImages/@item.Product.ImageUrl', false)">
                            <img src="@AppSettings.Urls.ThumbImages/@item.Product.ImageUrl" style="width:40px;" />
                        </label>
                    }
                    @Html.DisplayFor(modelItem => item.Product)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PoNr)
                    @if (!string.IsNullOrEmpty(item.RefCode))
                    {
                        <br />@Html.DisplayFor(modelItem => item.RefCode)
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.Designer)</td>
                <td>
                    @Html.DisplayFor(modelItem => item.Merchandiser1)
                    @Html.DisplayFor(modelItem => item.Merchandiser2)
                </td>
                <td>@Html.DisplayFor(modelItem => item.Supplier)</td>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer)
                    @if (item.CustomerDepartment != null)
                    {
                        @Html.DisplayFor(modelItem => item.CustomerDepartment)
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.Licensor)</td>
                <td align="right">
                    @Html.DisplayFor(modelItem => item.Quantity)
                    @{
                        grandTotal += item.Quantity;
                    }
                </td>
                @if (canSeeRestricted)
                {
                    <td align="right">@Html.DisplayFor(modelItem => item.DiscountRate)</td>
                    <td align="right">
                        @Html.DisplayFor(modelItem => item.UnitPrice)
                        @Html.DisplayFor(modelItem => item.SellingCurrency)
                    </td>
                }
            </tr>
                        }
        <tr class="bottom-row">
            <td class="hidden-print"></td>
            <td colspan="3">
                Total Records: @totalCount
                Seen: @Model.Count()
            </td>
            @if (canSeeRestricted)
            {
                <td></td>
            }
            <td></td>
            <td align="right" colspan="2">Total Quantities</td>
            <td align="right">@grandTotal.ToString("###,###")</td>
            @if (canSeeRestricted)
            {
                <td></td>
                <td></td>
            }
        </tr>
    </table>
                        if (canUserDelete)
                        {
                            @Html.Partial("_MessageBoxPartial")
                            }
                        }
                        else
                        {
                            <h4>@MessageStrings.NoResults!</h4>
                        }
@Html.Partial("_PagerPartial")
@section scripts{
    @Html.Partial("_IndexScriptsPartial", "PurchaseOrders")
    <script type="text/javascript">
        $('#CustomerId').change(function () {
            var customerId = $(this).val();
            var targetSelect = $('#CustomerDepartmentId');
            targetSelect.empty();
            targetSelect.append($('<option/>', {
                value: '',
                text: 'All Departments'
            }));
            if (customerId != null && customerId != '') {
                $.getJSON('/CustomerDepartments/GetCustomerDepartmentList', { customerId: customerId, pageSize: 100 }, function (customerDepartments) {
                    $.each(customerDepartments, function (index, customerDepartment) {
                        targetSelect.append($('<option/>', {
                            value: customerDepartment.Id,
                            text: customerDepartment.DepartmentName
                        }));
                    });
                });
            }
        });
        function toogleAccordionSign() {
            if ($('#filterPanel').hasClass('in')) {
                $('#filterPanelSign').removeClass('glyphicon-minus').addClass('glyphicon-plus');
                console.log('collapsed');
            }
            else {
                $('#filterPanelSign').removeClass('glyphicon-plus').addClass('glyphicon-minus');
                console.log('expanded');
            }
        }
    </script>
}