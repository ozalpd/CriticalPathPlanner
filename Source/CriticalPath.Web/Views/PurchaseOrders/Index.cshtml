@using CriticalPath.Web.Models
@using CriticalPath.Data
@using CP.i8n
@model IEnumerable<PurchaseOrder>
@{
    ViewBag.Title = @EntityStrings.PurchaseOrders;

    //Authorization Flags
    bool canUserEdit = ViewBag.canUserEdit;
    bool canUserCreate = ViewBag.canUserCreate;
    bool canUserDelete = ViewBag.canUserDelete;
    bool canSeeRestricted = ViewBag.canSeeRestricted;
    bool canUserApprove = ViewBag.canUserApprove;
    bool canUserCancelPO = ViewBag.canUserCancelPO;

    //Records & Pager
    int page = ViewBag.page;
    int totalCount = ViewBag.totalCount;
    int pageSize = ViewBag.pageSize;
    int pageCount = ViewBag.pageCount;
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "searchForm" }))
{
    <div class="row well">
        @Html.Hidden("page", page)
        @Html.Hidden("pageSize", pageSize)
        <div class="col-sm-5 col-md-6">
            <h3>@EntityStrings.PurchaseOrders</h3>
        </div>
        <div class="col-sm-2 text-right">
            <div>
                <label class="control-label mr10">
                    @EntityStrings.IsApproved
                </label>
                @Html.CheckBox("IsApproved")
            </div>
            <div>
                <label class="control-label mr10">
                    @EntityStrings.Cancelled
                </label>
                @Html.CheckBox("Cancelled")
            </div>
        </div>
        <div class="col-md-4 col-sm-5">
            @Html.Partial("_SearchBoxPartial")
        </div>
    </div>
}
@if (totalCount > 0)
{
    <table class="table table-hover table-striped">
        <tr>
            <th width="20px">@ActionStrings.Action</th>
            <th>
                @Html.DisplayNameFor(model => model.IsApproved)<br />
                @Html.DisplayNameFor(m => m.Cancelled)
            </th>
            <th>@Html.DisplayNameFor(model => model.PoNr)</th>
            <th>@Html.DisplayNameFor(model => model.RefCode)</th>
            <th>@Html.DisplayNameFor(model => model.Product)</th>
            <th>
                @Html.DisplayNameFor(model => model.Customer) /<br />
                @Html.DisplayNameFor(model => model.CustomerDepartment)
            </th>
            <th>@Html.DisplayNameFor(model => model.Licensor)</th>
            <th>@Html.DisplayNameFor(model => model.OrderDate)</th>
            @if (canSeeRestricted)
            {
                <th>@Html.DisplayNameFor(model => model.DueDate)</th>
                <th>@Html.DisplayNameFor(model => model.DiscountRate)</th>
                <th>@Html.DisplayNameFor(model => model.Quantity)</th>
                <th>@Html.DisplayNameFor(model => model.UnitPrice)</th>
            }
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <div class="btn-group">
                        <button type="button" title="@ActionStrings.Action" class="btn btn-xs btn-default dropdown-toggle" data-toggle="dropdown">
                            <span class="glyphicon glyphicon-tasks"></span> <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" role="menu">
                            <li>@Html.ActionLink(ActionStrings.Details, "Details", new { id = item.Id })</li>
                            @if (canUserEdit)
                            {
                                <li>@Html.ActionLink(ActionStrings.Edit, "Edit", new { id = item.Id })</li>
                            }
                            @if (!item.IsApproved && canUserDelete)
                            {
                                <li>
                                    <a href="#deleteConfirm" data-toggle="modal" onclick="setDelete('<b>@EntityStrings.PoNr @item.PoNr, @EntityStrings.Product @item.Product.ProductCode</b>', @item.Id);">
                                        @ActionStrings.Delete
                                    </a>
                                </li>
                            }
                            @if (canUserCreate)
                            {
                                <li class="divider"></li>
                                <li>@Html.ActionLink(ActionStrings.Repeat, "Repeat", new { id = item.Id })</li>
                            }
                            @if ((!item.Cancelled && canUserCancelPO) || (!item.IsApproved && canUserApprove))
                            {
                                <li class="divider"></li>
                            }
                            @if (!item.Cancelled && !item.IsApproved && canUserApprove)
                            {
                                <li>@Html.ActionLink(ActionStrings.Approve, "Approve", new { id = item.Id })</li>
                            }
                            @if (!item.Cancelled && canUserCancelPO)
                            {
                                <li>@Html.ActionLink(ActionStrings.CancelPO, "CancelPO", new { id = item.Id })</li>
                            }
                            @if (item.Processes.Count == 0)
                            {
                                <li>@Html.ActionLink(EntityStrings.CreateProcess, "Create", "Processes", new { purchaseOrderId = item.Id }, null)</li>
                            }
                        </ul>
                    </div>
                </td>
                <td>
                    @if (item.Cancelled)
                    {
                        <div style="min-width:112px" title="@EntityStrings.Cancelled">
                            @Html.DisplayFor(modelItem => item.Cancelled) <span class="checkboxText">@Html.DisplayFor(i => item.CancelDate)</span>
                        </div>
                    }
                    else
                    {
                        <div style="min-width:112px">
                            @Html.DisplayFor(modelItem => item.IsApproved) <span class="checkboxText">@Html.DisplayFor(i => item.ApproveDate)</span>
                        </div>
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.PoNr)</td>
                <td>@Html.DisplayFor(modelItem => item.RefCode)</td>
                <td>@Html.DisplayFor(modelItem => item.Product)</td>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer)
                    @if (item.CustomerDepartment != null)
                    {
                        @Html.DisplayFor(modelItem => item.CustomerDepartment)
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.Licensor)</td>
                <td align="right">@Html.DisplayFor(modelItem => item.OrderDate)</td>
                @if (canSeeRestricted)
                {
                    <td align="right">@Html.DisplayFor(modelItem => item.DueDate)</td>
                    <td align="right">@Html.DisplayFor(modelItem => item.DiscountRate)</td>
                    <td align="right">@Html.DisplayFor(modelItem => item.Quantity)</td>
                    <td align="right">
                        @Html.DisplayFor(modelItem => item.UnitPrice)
                        @Html.DisplayFor(modelItem => item.SellingCurrency)
                    </td>
                }
            </tr>
        }
    </table>
    if (canUserDelete)
    {
        @Html.Partial("_MessageBoxPartial")
    }
}
else
{
    <h4>@MessageStrings.NoResults!</h4>
}
@Html.Partial("_PagerPartial")
@section scripts{
    @Html.Partial("_IndexScriptsPartial", "PurchaseOrders")
}