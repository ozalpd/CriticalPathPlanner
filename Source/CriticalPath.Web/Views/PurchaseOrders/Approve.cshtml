@using CriticalPath.Web.Models
@using CriticalPath.Data
@using CP.i8n
@model PurchaseOrderEditVM
@{
    ViewBag.Title = ActionStrings.Approve;
}
<h2 class="mb20">@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(m => m.CustomerId)
    @Html.HiddenFor(m => m.ProductId)

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.PoNr, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.PoNr, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.PoNr, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RefCode, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.RefCode, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.RefCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.KimballNr, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.KimballNr, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.KimballNr, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-lg-2 col-md-3 col-sm-3 col-xs-3">
                @Html.DisplayNameFor(model => model.OrderDate)
            </label>
            <div class="col-lg-1 col-md-1 col-sm-2 col-xs-3 mt10">
                @Html.DisplayFor(m => m.OrderDate)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.Customer.CompanyName, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerPoNr, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.CustomerPoNr, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.CustomerPoNr, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Licensor, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.Licensor.CompanyName, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DiscountRate, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-2 col-md-3 col-sm-3">
                @{ Html.EnableClientValidation(false); }
                @Html.EditorFor(m => m.DiscountRate, new { htmlAttributes = new { @class = "form-control text-right" } })
                @{ Html.EnableClientValidation(true); }
                @Html.ValidationMessageFor(m => m.DiscountRate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FreightTermId, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.DropDownListFor(m => m.FreightTermId, null, ActionStrings.SelectPlease, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.FreightTermId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Product.ProductCode, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.Product.ProductCode, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>

        @Html.Partial("_AllPriceEdit", Model)

        <div class="form-group">
            @Html.LabelFor(model => model.SupplierId, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.DropDownListFor(m => m.SupplierId, null, ActionStrings.SelectPlease, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.SupplierId, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.Partial("_ProductSizingPartial")

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.Description, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextAreaFor(m => m.Notes, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-lg-2 col-md-3 col-sm-3">
                @Html.DisplayNameFor(model => model.DueDate)
            </label>
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.EditorFor(m => m.DueDate)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SupplierDueDate, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.EditorFor(m => m.SupplierDueDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.SupplierDueDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mt40">
            <label class="control-label col-lg-2 col-md-3 col-sm-3">
                @Html.DisplayNameFor(model => model.IsApproved)
            </label>
            <div class="col-md-8 col-sm-8">
                @Html.EditorFor(m => m.IsApproved)
            </div>
        </div>
        <div class="row mt20">
            <div class="col-lg-offset-2 col-md-offset-3 col-sm-offset-3 col-md-3 col-sm-4">
                <input type="submit" value='@ActionStrings.Approve' class="btn btn-lg btn-success" />
            </div>
            <div class="col-md-3 col-sm-3">
                @Html.ActionLink(@ActionStrings.BackToIndex, "Index", null, new { @class = "btn btn-lg btn-warning pull-right" })
            </div>
        </div>
    </div>
                    }