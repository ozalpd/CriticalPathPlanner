@using CriticalPath.Web.Models
@using CriticalPath.Data
@using CP.i8n
@model PurchaseOrderVM
@{
    ViewBag.Title = EntityStrings.PurchaseOrder;

    //Authorization Flags
    bool canUserEdit = ViewBag.canUserEdit;
    bool canUserCreate = ViewBag.canUserCreate;
    bool canUserDelete = ViewBag.canUserDelete;
    bool canUserApprove = ViewBag.canUserApprove;
    bool canUserCancelPO = ViewBag.canUserCancelPO;
}

<h2>@EntityStrings.PurchaseOrder @ActionStrings.Details</h2>

<div class="row">
    <label class="control-label col-md-2 col-sm-3">
        @Html.DisplayNameFor(model => model.OrderDate)
    </label>
    <div class="col-md-10 col-sm-9">
        @Html.DisplayFor(m => m.OrderDate)
    </div>
</div>
<div class="row">
    <label class="control-label col-md-2 col-sm-3">
        <span class="approveText">@Html.DisplayNameFor(model => model.IsApproved)</span>
        @Html.DisplayFor(m => m.IsApproved)
    </label>
    <div class="col-sm-6">
        @Html.DisplayFor(m => m.ApproveDate)
    </div>
</div>
<div class="row">
    <label class="control-label col-md-2 col-sm-3">
        @Html.DisplayNameFor(model => model.DueDate)
    </label>
    <div class="col-md-10 col-sm-9">
        @Html.DisplayFor(m => m.DueDate)
    </div>
</div>
<div class="row">
    <label class="control-label col-md-2 col-sm-3">
        @Html.DisplayNameFor(model => model.Customer)
    </label>
    <div class="col-md-10 col-sm-9 fontSize150pc">
        @Html.DisplayFor(m => m.Customer)
    </div>
</div>
<div class="row">
    <label class="control-label col-md-2 col-sm-3">
        @Html.DisplayNameFor(model => model.Product)
    </label>
    <div class="col-md-10 col-sm-9 fontSize150pc">
        @Html.DisplayFor(m => m.Product)
    </div>
</div>
<div class="row">
    <label class="control-label col-md-2 col-sm-3">
        @Html.DisplayNameFor(model => model.Code)
    </label>
    <div class="col-md-10 col-sm-9">
        @Html.DisplayFor(m => m.Code)
    </div>
</div>
<div class="row">
    <label class="control-label col-md-2 col-sm-3">
        @Html.DisplayNameFor(model => model.Description)
    </label>
    <div class="col-md-10 col-sm-9">
        @Html.DisplayFor(m => m.Description)
    </div>
</div>
<div class="row">
    <label class="control-label col-md-2 col-sm-3">
        @Html.DisplayNameFor(model => model.Quantity)
    </label>
    <div class="col-md-10 col-sm-9">
        @Html.DisplayFor(m => m.Quantity)
    </div>
</div>
<div class="row">
    <label class="control-label col-md-2 col-sm-3">
        @Html.DisplayNameFor(model => model.UnitPrice)
    </label>
    <div class="col-md-10 col-sm-9">
        @Html.DisplayFor(m => m.UnitPrice)
    </div>
</div>
@Html.Partial("_PoSizeRates")
<div class="row mt15">
    <label class="control-label col-md-2 col-sm-3">
        @Html.DisplayNameFor(model => model.Notes)
    </label>
    <div class="col-md-10 col-sm-9">
        @Html.DisplayFor(m => m.Notes)
    </div>
</div>
<div class="row">
    <div class="col-sm-6 col-md-offset-2 col-sm-offset-3">
        @Html.ActionLink(@ActionStrings.BackToIndex, "Index", null, new { @class = "btn btn-default" })
        @if (canUserEdit)
        {
            @Html.ActionLink(@ActionStrings.Edit, "Edit", null, new { id = Model.Id }, new { @class = "btn btn-default" })
        }
        @if (canUserCancelPO)
        {
            @Html.ActionLink(@ActionStrings.CancelPO, "CancelPO", null, new { id = Model.Id }, new { @class = "btn btn-danger" })
        }
        @if (!Model.IsApproved && canUserApprove)
        {
            @Html.ActionLink(@ActionStrings.Approve, "Approve", null, new { id = Model.Id }, new { @class = "btn btn-success" })
        }
    </div>
</div>
