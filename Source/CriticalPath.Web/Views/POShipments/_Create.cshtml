@using CriticalPath.Web.Models
@using CriticalPath.Data
@using CP.i8n
@model POShipmentDTO
@{
    bool modal = ViewBag.Modal ?? false;
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "dataInputForm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        
        <div class="form-group">
            @Html.LabelFor(model => model.ShippingNr, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.ShippingNr, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.ShippingNr, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ShippingDate, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.EditorFor(m => m.ShippingDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(m => m.ShippingDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryNr, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.DeliveryNr, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.DeliveryNr, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.EditorFor(m => m.DeliveryDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(m => m.DeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DestinationNr, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.DestinationNr, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.DestinationNr, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RefCode, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.RefCode, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.RefCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomerRefNr, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.TextBoxFor(m => m.CustomerRefNr, new { @class = "form-control", autocomplete = "off" })
                @Html.ValidationMessageFor(m => m.CustomerRefNr, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.EditorFor(m => m.Quantity, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(m => m.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsShipped, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.EditorFor(m => m.IsShipped, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(m => m.IsShipped, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsDelivered, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.EditorFor(m => m.IsDelivered, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(m => m.IsDelivered, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(m => m.PurchaseOrderId)
        <div class="form-group">
            @Html.LabelFor(model => model.FreightTermId, htmlAttributes: new { @class = "control-label col-lg-2 col-md-3 col-sm-3" })
            <div class="col-lg-5 col-md-6 col-sm-7">
                @Html.DropDownListFor(m => m.FreightTermId, null, ActionStrings.SelectPlease, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.FreightTermId, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (modal)
        {
            <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        }
        else
        {
            @Html.Partial("_SaveButtonsPartial")
        }
    </div>
}
<script type="text/javascript">
    (function () {
        $("#ShippingDate").datepicker("option", "onClose", function (selectedDate) {
            if (selectedDate) {
                $("#DeliveryDate").datepicker("option", "minDate", selectedDate);
            }
        });
        $("#DeliveryDate").datepicker("option", "minDate", $("#ShippingDate").val());
    })();
</script>