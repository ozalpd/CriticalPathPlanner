@using CriticalPath.Web.Models
@using CriticalPath.Data
@using CP.i8n
@model IEnumerable<Product>
@{
    ViewBag.Title = @EntityStrings.Products;

    //Authorization Flags
    bool canUserEdit = ViewBag.canUserEdit;
    bool canUserCreate = ViewBag.canUserCreate;
    bool canUserDelete = ViewBag.canUserDelete;

    //Records & Pager
    int page = ViewBag.page;
    int totalCount = ViewBag.totalCount;
    int pageSize = ViewBag.pageSize;
    int pageCount = ViewBag.pageCount;

    var title = EntityStrings.Products;
}
<div class="row well">
    <div class="col-md-8 col-sm-7">
        <h4>@title</h4>
    </div>
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "searchForm" }))
    {
        @Html.Hidden("page", page)
        @Html.Hidden("pageSize", pageSize)
        <div class="col-md-4 col-sm-5">
            @Html.Partial("_SearchBoxPartial")
        </div>
    }
</div>
@if (totalCount > 0)
{
    <div id="mainGridDiv" class="table-responsive">
        <table id="mainGrid" class="table table-striped table-bordered table-hover">
            <tr>
                <th>@ActionStrings.Action</th>
                <th>@Html.DisplayNameFor(model => model.ProductCode)</th>
                <th>@Html.DisplayNameFor(model => model.Description)</th>
                <th>@Html.DisplayNameFor(model => model.Category)</th>
                <th>@Html.DisplayNameFor(model => model.Discontinued)</th>
            </tr>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <div class="btn-group">
                            <button type="button" title="@ActionStrings.Action" class="btn btn-xs btn-default dropdown-toggle" data-toggle="dropdown" onclick="onActionMenuClick(this);">
                                <span class="glyphicon glyphicon-tasks"></span> <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" role="menu">
                                <li>@Html.ActionLink(ActionStrings.Details, "Details", new { id = item.Id })</li>
                                @if (canUserEdit)
                                {
                                    <li>@Html.ActionLink(ActionStrings.Edit, "Edit", new { id = item.Id })</li>
                                }
                                @if (canUserDelete)
                                {
                                    <li>
                                        <a href="#deleteConfirm" data-toggle="modal" onclick="setDelete('<b>@(item.ProductCode)</b>', @item.Id);">@ActionStrings.Delete</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.ProductCode)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>@Html.DisplayFor(modelItem => item.Category)</td>
                    <td>
                        @if (item.Discontinued)
                        {
                            @:@Html.DisplayFor(modelItem => item.Discontinued) @Html.DisplayFor(modelItem => item.DiscontinueDate)
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
    @Html.Partial("_PagerPartial")
    @Html.Partial("_MessageBoxPartial")
    @section scripts{
        @Html.Partial("_IndexScriptsPartial", "Products") @* Controller's name *@
        <script type="text/javascript">
            function onActionMenuClick(menuBtn) {
                setTimeout(function () {
                    var menuHeight = 120;
                    var rectMenu = menuBtn.getBoundingClientRect();
                    var rectGrid = document.getElementById("mainGrid").getBoundingClientRect();
                    console.log("Click", rectGrid);
                    var diffY = rectGrid.bottom - rectMenu.bottom - menuHeight;
                    console.log("Click", diffY);
                    if (diffY < 0) {
                        var viewport = $('#mainGridDiv');
                        var viewportScroll = viewport.scrollTop();
                        viewport.scrollTop((diffY * -1) + viewportScroll);
                    }
                }, 250);
            }
        </script>
    }
}
else
{
    <h4>@MessageStrings.NoResults!</h4>
}