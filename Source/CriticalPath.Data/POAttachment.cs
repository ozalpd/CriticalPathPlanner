//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CriticalPath.Data
{
    using System;
    using System.Collections.Generic;
    
    public partial class POAttachment : IDisplayOrder, ICreatorId, ICreatorIp, ICreateDate, IModifyNr, IModifierId, IModifierIp, IModifyDate
    {
        public int Id { get; set; }
        public int PurchaseOrderId { get; set; }
        public string FileUrl { get; set; }
        public string FileTitle { get; set; }
        public string FileName { get; set; }
        public string FileType { get; set; }
        public int DisplayOrder { get; set; }
        public int ModifyNr { get; set; }
        public System.DateTime ModifyDate { get; set; }
        public string ModifierId { get; set; }
        public string ModifierIp { get; set; }
        public System.DateTime CreateDate { get; set; }
        public string CreatorId { get; set; }
        public string CreatorIp { get; set; }
    
        public virtual AspNetUser CreatedUser { get; set; }
        public virtual AspNetUser ModifiedUser { get; set; }
        public virtual PurchaseOrder PurchaseOrder { get; set; }
    	/// <summary>
    	/// Clones all properties in a new POAttachment instance,
    	/// except PrimaryKey(s)
    	/// </summary>
    	/// <returns>New POAttachment instance</returns>
        public POAttachment Clone()
        {
            var clone = new POAttachment();
            clone.PurchaseOrderId = PurchaseOrderId;
            clone.FileUrl = FileUrl;
            clone.FileTitle = FileTitle;
            clone.FileName = FileName;
            clone.FileType = FileType;
            clone.DisplayOrder = DisplayOrder;
            clone.ModifyNr = ModifyNr;
            clone.ModifyDate = ModifyDate;
            clone.ModifierId = ModifierId;
            clone.ModifierIp = ModifierIp;
            clone.CreateDate = CreateDate;
            clone.CreatorId = CreatorId;
            clone.CreatorIp = CreatorIp;
    
            Cloning(clone);
    
            return clone;
        }
    
    	// Use below function in a partial class file (eg. POAttachment.part.cs)
    	// to add more complexity to clone
        partial void Cloning(POAttachment clone);
    }
    
    //Data Transfer Object type for POAttachment
    public partial class POAttachmentDTO
    {
        public POAttachmentDTO() { }
    
        public POAttachmentDTO(POAttachment entity)
        {
            Id = entity.Id;
            PurchaseOrderId = entity.PurchaseOrderId;
            FileUrl = entity.FileUrl;
            FileTitle = entity.FileTitle;
            FileName = entity.FileName;
            FileType = entity.FileType;
            DisplayOrder = entity.DisplayOrder;
        
            Initiliazing(entity);
        }
    
        partial void Initiliazing(POAttachment entity);
        
        public virtual POAttachment ToPOAttachment()
        {
            var entity = new POAttachment();
            entity.Id = Id;
            entity.PurchaseOrderId = PurchaseOrderId;
            entity.FileUrl = FileUrl;
            entity.FileTitle = FileTitle;
            entity.FileName = FileName;
            entity.FileType = FileType;
            entity.DisplayOrder = DisplayOrder;
    
            Converting(entity);
    
            return entity;
        }
    
        partial void Converting(POAttachment entity);
      
        public int Id { get; set; }
        public int PurchaseOrderId { get; set; }
        public string FileUrl { get; set; }
        public string FileTitle { get; set; }
        public string FileName { get; set; }
        public string FileType { get; set; }
        public int DisplayOrder { get; set; }
    }
}
