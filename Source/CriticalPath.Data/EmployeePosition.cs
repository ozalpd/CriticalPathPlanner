//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CriticalPath.Data
{
    using System;
    using System.Collections.Generic;
    
    public partial class EmployeePosition : ICreatorId, ICreatorIp, ICreateDate
    {
        public int Id { get; set; }
        public string Position { get; set; }
        public bool AppDefault { get; set; }
        public System.DateTime CreateDate { get; set; }
        public string CreatorId { get; set; }
        public string CreatorIp { get; set; }
    
        public virtual AspNetUser CreatedUser { get; set; }
    	/// <summary>
    	/// Clones all properties in a new EmployeePosition instance,
    	/// except PrimaryKey(s)
    	/// </summary>
    	/// <returns>New EmployeePosition instance</returns>
        public EmployeePosition Clone()
        {
            var clone = new EmployeePosition();
            clone.Position = Position;
            clone.AppDefault = AppDefault;
            clone.CreateDate = CreateDate;
            clone.CreatorId = CreatorId;
            clone.CreatorIp = CreatorIp;
    
            Cloning(clone);
    
            return clone;
        }
    
    	// Use below function in a partial class file (eg. EmployeePosition.part.cs)
    	// to add more complexity to clone
        partial void Cloning(EmployeePosition clone);
    }
    
    //Data Transfer Object type for EmployeePosition
    public partial class EmployeePositionDTO
    {
        public EmployeePositionDTO() { }
    
        public EmployeePositionDTO(EmployeePosition entity)
        {
            Id = entity.Id;
            Position = entity.Position;
            AppDefault = entity.AppDefault;
        
            Initiliazing(entity);
        }
    
        partial void Initiliazing(EmployeePosition entity);
        
        public virtual EmployeePosition ToEmployeePosition()
        {
            var entity = new EmployeePosition();
            entity.Id = Id;
            entity.Position = Position;
            entity.AppDefault = AppDefault;
    
            Converting(entity);
    
            return entity;
        }
    
        partial void Converting(EmployeePosition entity);
      
        public int Id { get; set; }
        public string Position { get; set; }
        public bool AppDefault { get; set; }
    }
}
