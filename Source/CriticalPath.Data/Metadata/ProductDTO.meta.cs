using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using CP.i8n;
//------------------------------------------------------------------------------
//
//     This code was generated by OzzCodeGen.
//
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

namespace CriticalPath.Data
{
    [MetadataTypeAttribute(typeof(ProductDTO.ProductMetadata))]
    public partial class ProductDTO
	{
        internal sealed partial class ProductMetadata
		{
            // This metadata class is not intended to be instantiated.
            private ProductMetadata() { }

            [StringLength(64, ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "MaxLeght")]
            [Required(ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "Required")]
            [Display(ResourceType = typeof(EntityStrings), Name = "ProductCode")]
            public string ProductCode { get; set; }

            [StringLength(128, ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "MaxLeght")]
            [Required(ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "Required")]
            [DataType(DataType.Text)]
            [Display(ResourceType = typeof(EntityStrings), Name = "Description")]
            public string Description { get; set; }

            [StringLength(256, ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "MaxLeght")]
            [DataType(DataType.ImageUrl)]
            [Display(ResourceType = typeof(EntityStrings), Name = "ImageUrl")]
            public string ImageUrl { get; set; }

            [Required(ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "Required")]
            [Display(ResourceType = typeof(EntityStrings), Name = "CategoryId")]
            public int CategoryId { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "Licensed")]
            public bool Licensed { get; set; }

            [Required(ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "Required")]
            [Display(ResourceType = typeof(EntityStrings), Name = "UnitPrice")]
            public decimal UnitPrice { get; set; }

            [Required(ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "Required")]
            [Display(ResourceType = typeof(EntityStrings), Name = "SellingCurrencyId")]
            public int SellingCurrencyId { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "UnitPrice2")]
            public decimal UnitPrice2 { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "SellingCurrency2Id")]
            public int SellingCurrency2Id { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "BuyingPrice")]
            public decimal BuyingPrice { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "BuyingCurrencyId")]
            public int BuyingCurrencyId { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "BuyingPrice2")]
            public decimal BuyingPrice2 { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "BuyingCurrency2Id")]
            public int BuyingCurrency2Id { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "LicensorPrice")]
            public decimal LicensorPrice { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "LicensorCurrencyId")]
            public int LicensorCurrencyId { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "RoyaltyFee")]
            public decimal RoyaltyFee { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "RoyaltyCurrencyId")]
            public int RoyaltyCurrencyId { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "RetailPrice")]
            public decimal RetailPrice { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "RetailCurrencyId")]
            public int RetailCurrencyId { get; set; }

            [UIHint("BoolRed")]
            [Display(ResourceType = typeof(EntityStrings), Name = "Discontinued")]
            public bool Discontinued { get; set; }

            [DataType(DataType.Date)]
            [Display(ResourceType = typeof(EntityStrings), Name = "DiscontinueDate")]
            public DateTime DiscontinueDate { get; set; }

            [StringLength(256, ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "MaxLeght")]
            [DataType(DataType.MultilineText)]
            [Display(ResourceType = typeof(EntityStrings), Name = "DiscontinueNotes")]
            public string DiscontinueNotes { get; set; }

		}
	}
}