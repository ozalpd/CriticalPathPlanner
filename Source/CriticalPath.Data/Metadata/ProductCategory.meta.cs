using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using CP.i8n;
//------------------------------------------------------------------------------
//
//     This code was generated by OzzCodeGen.
//
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

namespace CriticalPath.Data
{
    [MetadataTypeAttribute(typeof(ProductCategory.ProductCategoryMetadata))]
    public partial class ProductCategory
	{
        internal sealed partial class ProductCategoryMetadata
		{
            // This metadata class is not intended to be instantiated.
            private ProductCategoryMetadata() { }

            [StringLength(128, ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "MaxLeght")]
            [Required(ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "Required")]
            [Display(ResourceType = typeof(EntityStrings), Name = "CategoryName")]
            public string CategoryName { get; set; }

            [StringLength(64, ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "MaxLeght")]
            [Display(ResourceType = typeof(EntityStrings), Name = "CategoryCode")]
            public string CategoryCode { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "ParentCategoryId")]
            public int ParentCategoryId { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "ParentCategory")]
            public ProductCategory ParentCategory { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "SubCategories")]
            public ICollection<ProductCategory> SubCategories { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "Products")]
            public ICollection<Product> Products { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "ModifiedUser")]
            public AspNetUser ModifiedUser { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "CreatedUser")]
            public AspNetUser CreatedUser { get; set; }

		}
	}
}