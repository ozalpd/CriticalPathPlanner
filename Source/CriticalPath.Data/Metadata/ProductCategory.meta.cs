using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using CriticalPath.Data.Resources;
//------------------------------------------------------------------------------
//
//     This code was generated by OzzCodeGen 10/18/2015 06:14:38
//
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

namespace CriticalPath.Data
{
    [MetadataTypeAttribute(typeof(ProductCategory.ProductCategoryMetadata))]
    public partial class ProductCategory
	{
        internal sealed partial class ProductCategoryMetadata
		{
            // This metadata class is not intended to be instantiated.
            private ProductCategoryMetadata() { }

            [StringLength(128, ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "MaxLeght")]
            [Required(ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "Required")]
            [Display(ResourceType = typeof(EntityStrings), Name = "Title")]
            public string Title { get; set; }

            [StringLength(48, ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "MaxLeght")]
            [Display(ResourceType = typeof(EntityStrings), Name = "Code")]
            public string Code { get; set; }

            [StringLength(256, ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "MaxLeght")]
            [DataType(DataType.MultilineText)]
            [Display(ResourceType = typeof(EntityStrings), Name = "Description")]
            public string Description { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "ParentCategoryId")]
            public int ParentCategoryId { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "ParentCategory")]
            public ProductCategory ParentCategory { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "SubCategories")]
            public ICollection<ProductCategory> SubCategories { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "Products")]
            public ICollection<Product> Products { get; set; }

		}
	}
}