using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using CP.i8n;
//------------------------------------------------------------------------------
//
//     This code was generated by OzzCodeGen.
//
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

namespace CriticalPath.Data
{
    [MetadataTypeAttribute(typeof(Process.ProcessMetadata))]
    public partial class Process
	{
        internal sealed partial class ProcessMetadata
		{
            // This metadata class is not intended to be instantiated.
            private ProcessMetadata() { }

            [Display(ResourceType = typeof(EntityStrings), Name = "IsApproved")]
            public bool IsApproved { get; set; }

            [DataType(DataType.Date)]
            [Display(ResourceType = typeof(EntityStrings), Name = "ApproveDate")]
            public DateTime ApproveDate { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "PurchaseOrder")]
            public PurchaseOrder PurchaseOrder { get; set; }

            [Required(ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "Required")]
            [Display(ResourceType = typeof(EntityStrings), Name = "PurchaseOrderId")]
            public int PurchaseOrderId { get; set; }

            [StringLength(256, ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "MaxLeght")]
            [DataType(DataType.Text)]
            [Display(ResourceType = typeof(EntityStrings), Name = "Description")]
            public string Description { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "IsCompleted")]
            public bool IsCompleted { get; set; }

            [UIHint("BoolRed")]
            [Display(ResourceType = typeof(EntityStrings), Name = "Cancelled")]
            public bool Cancelled { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "ProcessTemplate")]
            public ProcessTemplate ProcessTemplate { get; set; }

            [Required(ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "Required")]
            [Display(ResourceType = typeof(EntityStrings), Name = "ProcessTemplateId")]
            public int ProcessTemplateId { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "CurrentStepId")]
            public int CurrentStepId { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "CurrentStep")]
            public ProcessStep CurrentStep { get; set; }

            [Required(ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "Required")]
            [DataType(DataType.Date)]
            [Display(ResourceType = typeof(EntityStrings), Name = "StartDate")]
            public DateTime StartDate { get; set; }

            [Required(ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "Required")]
            [DataType(DataType.Date)]
            [Display(ResourceType = typeof(EntityStrings), Name = "TargetDate")]
            public DateTime TargetDate { get; set; }

            [DataType(DataType.Date)]
            [Display(ResourceType = typeof(EntityStrings), Name = "ForecastDate")]
            public DateTime ForecastDate { get; set; }

            [DataType(DataType.Date)]
            [Display(ResourceType = typeof(EntityStrings), Name = "RealizedDate")]
            public DateTime RealizedDate { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "ProcessSteps")]
            public ICollection<ProcessStep> ProcessSteps { get; set; }

            [DataType(DataType.Date)]
            [Display(ResourceType = typeof(EntityStrings), Name = "CancelDate")]
            public DateTime CancelDate { get; set; }

            [DataType(DataType.MultilineText)]
            [Display(ResourceType = typeof(EntityStrings), Name = "CancellationReason")]
            public string CancellationReason { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "CancelledUser")]
            public AspNetUser CancelledUser { get; set; }

            [StringLength(48, ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "MaxLeght")]
            [Display(ResourceType = typeof(EntityStrings), Name = "ApprovedUserId")]
            public string ApprovedUserId { get; set; }

            [StringLength(48, ErrorMessageResourceType = typeof(ErrorStrings), ErrorMessageResourceName = "MaxLeght")]
            [Display(ResourceType = typeof(EntityStrings), Name = "ApprovedUserIp")]
            public string ApprovedUserIp { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "ApprovedUser")]
            public AspNetUser ApprovedUser { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "ModifiedUser")]
            public AspNetUser ModifiedUser { get; set; }

            [Display(ResourceType = typeof(EntityStrings), Name = "CreatedUser")]
            public AspNetUser CreatedUser { get; set; }

		}
	}
}